{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\api\\controller\\websocket.js"
    ],
    "names": [
        "Base",
        "require",
        "socketObject",
        "conn",
        "connectmq",
        "then",
        "result",
        "console",
        "log",
        "catch",
        "error",
        "Promise",
        "resolve",
        "reject",
        "amqp",
        "connect",
        "err",
        "module",
        "exports",
        "findGroups",
        "user_email",
        "data",
        "model",
        "where",
        "group_id",
        "select",
        "assertmq",
        "to",
        "createChannel",
        "channel",
        "q",
        "assertQueue",
        "durable",
        "sendToQueue",
        "Buffer",
        "JSON",
        "stringify",
        "persistent",
        "close",
        "createmqchannel",
        "ch",
        "receivemq",
        "email",
        "checkQueue",
        "promise",
        "msg",
        "consume",
        "push",
        "parse",
        "content",
        "toString",
        "ack",
        "noAck",
        "loginAction",
        "wsData",
        "Object",
        "assign",
        "websocket",
        "id",
        "groups",
        "map",
        "n",
        "join",
        "think",
        "isEmpty",
        "emit",
        "sendObj",
        "closeAction",
        "emails",
        "keys",
        "index",
        "findIndex",
        "value",
        "is",
        "undefined",
        "chatAction",
        "sendTo",
        "toUser",
        "isOnline",
        "fromUser",
        "date",
        "time",
        "toGroup",
        "ctx",
        "app",
        "io",
        "in",
        "members",
        "field",
        "addVerifyAction",
        "toEmail",
        "addFriendAction",
        "max",
        "userA",
        "userB",
        "a",
        "friend_email",
        "b",
        "addMany",
        "length",
        "Date",
        "dateStr",
        "getFullYear",
        "getMonth",
        "getDate",
        "timeStr",
        "getHours",
        "getMinutes",
        "getSeconds",
        "type",
        "addGroupAction",
        "group",
        "add",
        "dataisExist",
        "inviteToGroupAction",
        "leader",
        "acceptInviteAddToGroupLeaderAction",
        "acceptInviteAddToGroupAction",
        "createGroupJoinAction",
        "removeGroupAction",
        "leave",
        "delete",
        "leaveGroupAction"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\api\\controller\\websocket.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nimport amqp from 'amqplib/callback_api';\r\nconst socketObject = {}\r\nlet conn = ''\r\nconnectmq().then((result) => {\r\n      conn = result\r\n      console.log('连接上mq')\r\n    }).catch((error) => console.log(error))\r\n\r\nfunction connectmq() {\r\n    return new Promise((resolve,reject) => {\r\n      amqp.connect('amqp://localhost', function (err, conn) {\r\n        if(err)\r\n          reject(err)\r\n        else\r\n          resolve(conn)\r\n       });\r\n    })\r\n  }\r\n// this.websocket是指客户端的socket\r\n// this就是this.websocket\r\n// 所有的socket怎么得？\r\n// 不用获得所有socket的方法是将每个连上的socket放入socketMap\r\n// 发送数据到别的客户端可以用this.websocket.emit\r\nmodule.exports = class extends Base {\r\n\r\n  async findGroups(user_email) {\r\n  \tconst data = await this.model('relationship').where({user_email:user_email,group_id:['!=',null]}).select()\r\n  \treturn data\r\n  }\r\n\r\n\r\n  /*\r\n    data: {\r\n      sendObj: {\r\n        id: 'toemail',\r\n        data: [\r\n        {\r\n          fromUser: {\r\n            user_email: '',\r\n            user_name: '',\r\n            avatar: '',\r\n          },\r\n          data: '',\r\n          date: '',\r\n          time: '',\r\n          isOnline: true || false,\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  */\r\n  async assertmq(data,to) {\r\n    await conn.createChannel((err, channel) => {\r\n\r\n      const q = to;\r\n\r\n      channel.assertQueue(q, { durable: true });\r\n      // Note: on Node 6 Buffer.from(msg) should be used\r\n      channel.sendToQueue(q, new Buffer(JSON.stringify(data)), { persistent: true });\r\n      console.log(data);\r\n      channel.close()\r\n    });\r\n  }\r\n\r\n  async createmqchannel() {\r\n    return new Promise((resolve,reject) => {\r\n      conn.createChannel((err,ch) => {\r\n        // if(err)\r\n        //   reject(err)\r\n        // else\r\n          resolve(ch)\r\n      })\r\n    })\r\n  }\r\n \r\n\r\n\r\n  async receivemq(email,channel) {\r\n    // const channel = await this.createmqchannel()\r\n    // if(think.isEmpty(channel))\r\n    //   return\r\n      const q = email\r\n      channel.checkQueue(q)\r\n      channel.assertQueue(q, {durable: true});\r\n    const promise = new Promise((resolve,reject) => {\r\n      const msg = []\r\n      channel.consume(q, (data) => {\r\n        msg.push(JSON.parse(data.content.toString()))\r\n        resolve(msg)\r\n        channel.ack(data);\r\n      }, {noAck: false});\r\n    })\r\n    return promise\r\n  }\r\n\r\n\r\n  async loginAction() {\r\n  \t// 获取用户邮箱\r\n    const email = this.wsData.email\r\n  \t// const user = await this.session('user_token');\r\n  \t/*if(think.isEmpty(user)){\r\n      return ;\r\n    }*/\r\n  \tconsole.log('user email: ' + email)\r\n\r\n  \t// 写入对象，email对应socket本身\r\n  \tObject.assign(socketObject, {[email]:this.websocket})\r\n\r\n  \tconsole.log(`socketId: ${this.websocket.id}连接`)\r\n  \t// this.emit('opend', 'This client opened successfully!')\r\n  \tconst groups = await this.findGroups(email)\r\n  \tgroups.map((n) => {\r\n  \t  this.websocket.join(n.group_id);\r\n  \t})\r\n\r\n  \tconst channel = await this.createmqchannel();\r\n    if(think.isEmpty(channel))\r\n      return\r\n\r\n  \tconst msg = await this.receivemq(email,channel)\r\n    console.log(msg)\r\n    channel.close()\r\n    msg.map((n) => this.emit('message', {sendObj:n} ))\r\n    \r\n  }\r\n\r\n  async closeAction() {\r\n    const emails = Object.keys(socketObject)\r\n    const index = emails.findIndex((value) => Object.is(socketObject[value],this.websocket))\r\n    if(index !== -1) {\r\n      console.log(`${emails[index]}关闭`)\r\n      Object.assign(socketObject,{[emails[index]]:undefined})\r\n    }\r\n  }\r\n\r\n\r\n  async chatAction() {\r\n  \t// 要发送的信息\r\n  \t// 离线消息放入redis？\r\n//   \tconst sseett = [1,2,{aa:'12'}]\r\n//   \tawait think.cache('aaa', sseett);\r\n//   \tlet aaa = await think.cache('aaa');\r\n//   \tconsole.log(aaa)\r\n//   \tsseett.push({aa:'13'})\r\n//   \tawait think.cache('aaa', sseett);\r\n// aaa = await think.cache('aaa');\r\n  \t// await think.cache('aaa').then((data)=> {\r\n  \t//   console.log(data)\r\n  \t// })\r\n  // \tif(this.wsData.file) {\r\n  // \t  var myArray = new ArrayBuffer(512);\r\n\t //  var longInt8View = new Uint8Array(myArray);\r\n\t //  for (var i=0; i< longInt8View.length; i++) {\r\n\t\t// longInt8View[i] = i % 255;\r\n\t //  }\r\n  // \t}\r\n  \tlet to = ''\r\n  \tif(this.wsData.sendTo.toUser) {\r\n  \t  to = this.wsData.sendTo.toUser.email\r\n  \t  // if(socketObject[to]) {\r\n  \t  \tconst sendObj = {}\r\n  \t  \tconst data = []\r\n  \t  \tdata.push({\r\n  \t  \t  isOnline: true,\r\n  \t  \t  fromUser: this.wsData.fromUser,\r\n  \t  \t  data: this.wsData.data,\r\n  \t  \t  date: this.wsData.date,\r\n  \t  \t  time: this.wsData.time,\r\n  \t  \t  // file: this.wsData.file,\r\n  \t  \t})\r\n  \t  \tObject.assign(sendObj,{id:to},{data:data})\r\n  \t  \tthis.emit('message',{sendObj})\r\n  \t  \tObject.assign(sendObj,{id:this.wsData.fromUser.email})\r\n        console.log(think.isEmpty(socketObject[to]))\r\n        if(think.isEmpty(socketObject[to])) {\r\n          // 未在线 将数据放mq\r\n          this.assertmq(sendObj,to)\r\n          return\r\n        }\r\n  \t  \tsocketObject[to].emit('message', {sendObj} )\r\n  \t  // }\r\n  \t}\r\n  \telse {\r\n  \t  to = this.wsData.sendTo.toGroup.id\r\n  \t  // if(socketObject[to]) {\r\n  \t  \tconst sendObj = {}\r\n  \t  \tconst data = []\r\n  \t  \tdata.push({\r\n  \t  \t  isOnline: 1,\r\n  \t  \t  fromUser: this.wsData.fromUser,\r\n  \t  \t  data: this.wsData.data,\r\n  \t  \t  date: this.wsData.date,\r\n  \t  \t  time: this.wsData.time,\r\n  \t  \t})\r\n  \t  \tObject.assign(sendObj,{id:to},{data:data})\r\n  \t  \tthis.ctx.app.websocket.io.in(to).emit('message', {sendObj});\r\n\r\n        const members = await this.model('relationship').where({group_id:to}).field('user_email').select()\r\n        members.map((n) => {\r\n          if(think.isEmpty(socketObject[n.user_email])) {\r\n            this.assertmq(sendObj,n.user_email)\r\n          }\r\n        })\r\n  \t  \r\n  \t}\r\n  }\r\n\r\n  async addVerifyAction() {\r\n  \t// 收到好友/群组验证\r\n  \tconsole.log('`${this.wsData.fromUser.email}`发出验证数据')\r\n  \tsocketObject[this.wsData.toEmail].emit('getVerify', this.wsData)\r\n  \t// this.emit('getVerify', this.wsData)\r\n  }\r\n\r\n  async addFriendAction() {\r\n    const id = await this.model('relationship').max('id')\r\n    // userA 邀请方\r\n    const userA = this.wsData.userA\r\n    const userB = this.wsData.userB\r\n    const a = Object.assign({},{id:id+1},{user_email:userA.email},{friend_email:userB.email})\r\n    const b = Object.assign({},{id:id+2},{user_email:userB.email},{friend_email:userA.email})\r\n    console.log([a,b])\r\n    const data = await this.model('relationship').addMany([a,b])\r\n\r\n    // 有历史记录\r\n    // 验证信息将变为系统消息\r\n    // const systemMessage = user\r\n    // fs.writeFileSync\r\n    if(data.length < 2) {\r\n      // 回滚\r\n      return false\r\n    }\r\n    // 好友成功\r\n    // this是接受方\r\n    const index = this.wsData.index\r\n    const date = new Date()\r\n    const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    const timeStr = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n    this.emit('addFriendResult', Object.assign({},{fromUser:userA},{index:index},{type:3}))\r\n    socketObject[userA.email].emit('addFriendResult', Object.assign({},{fromUser:userB},{date:dateStr},{time:timeStr},{type:0},{data:'接受了您的添加请求并添加您为好友'}))\r\n  }\r\n\r\n  async addGroupAction() {\r\n  \tconst id = await this.model('relationship').max('id')\r\n  \t// userA 申请方\r\n  \t// userB 接受方\r\n  \tconst userA = this.wsData.userA\r\n  \tconst userB = this.wsData.userB\r\n  \tconst group = this.wsData.group\r\n  \tconst data = await this.model('relationship').add({id:id+1,user_email:userA.email,group_id:group.group_id})\r\n  \tconst dataisExist = await this.model('relationship').where({id:id+1}).select()\r\n  \tconsole.log(dataisExist)\r\n  \tif(dataisExist.length <=0)\r\n  \t  return false\r\n\r\n  \tconst index = this.wsData.index\r\n  \tconst date = new Date()\r\n    const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    const timeStr = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n  \tthis.emit('addGroupResult', Object.assign({},{fromUser:userA},{index:index},{type:4}))\r\n  \tsocketObject[userA.email].emit('addGroupResult', Object.assign({},{fromUser:userB},{group:group},{date:dateStr},{time:timeStr},{type:0},{data:'接受了您加入群的请求'}))\r\n  \t// join group\r\n  \tsocketObject[userA.email].join(group.group_id);\r\n  }\r\n\r\n  async inviteToGroupAction() {\r\n  \t// userA 发起邀请方\r\n  \t// const userA = this.wsData.userA\r\n  \t// const userB = this.wsData.userB\r\n  \tconst group = this.wsData.group\r\n\r\n  \tsocketObject[group.leader].emit('getVerify',this.wsData)\r\n  \t// socketObject[group.leader].emit(...)\r\n  }\r\n\r\n  async acceptInviteAddToGroupLeaderAction() {\r\n  \t// userA 发起邀请方\r\n  \tconst userA = this.wsData.userA\r\n  \tconst userB = this.wsData.userB\r\n  \tconst group = this.wsData.group\r\n  \tconst index = this.wsData.index\r\n\r\n  \t\r\n  \t\r\n  \t// fromUser是邀请方\r\n  \tsocketObject[group.leader].emit('inviteResult',Object.assign({},{fromUser:userA},{group:group},{index:index},{type:6}))\r\n  \t// 发给userA fromUser是userB userB接受邀请 写data\r\n  \tconst date = new Date()\r\n    const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    const timeStr = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n  \tsocketObject[userB.friend_email].emit('inviteResult',Object.assign({},{fromUser:userA},{userB:userB},{group:group},{date:dateStr},{time:timeStr},{type:5}))\r\n  \t// join group\r\n  \t// this.websocket.join(group.id);\r\n  }\r\n\r\n  async acceptInviteAddToGroupAction() {\r\n  \t// userA 发起邀请方\r\n  \tconst userA = this.wsData.userA\r\n  \tconst userB = this.wsData.userB\r\n  \tconst group = this.wsData.group\r\n  \tconst index = this.wsData.index\r\n  \tconsole.log(userB)\r\n\r\n  \tconst id = await this.model('relationship').max('id')\r\n  \tconst data = await this.model('relationship').add({id:id+1,user_email:userB.friend_email,group_id:group.id})\r\n\r\n  \tsocketObject[userB.friend_email].emit('inviteResult',Object.assign({},{fromUser:userA},{group:group},{index:index},{type:6}))\r\n  \tconst date = new Date()\r\n    const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    const timeStr = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n  \tsocketObject[userA.email].emit('inviteResult',Object.assign({},{fromUser:userA},{group:group},{userB:userB},{time:timeStr},{date:dateStr},{type:7},{data:'接受了您的请求并加入群'}))\r\n  \t// join group\r\n  \tsocketObject[userB.friend_email].join(group.id);\r\n  }\r\n\r\n  async createGroupJoinAction() {\r\n  \tconst group = this.wsData\r\n  \tconsole.log(`进入房间${group.result[0].group_id}`)\r\n  \tthis.websocket.join(group.result[0].group_id)\r\n  }\r\n\r\n  async removeGroupAction() {\r\n  \tconst group_id = this.wsData.group.id\r\n  \tthis.ctx.app.websocket.io.in(group_id).emit('removeGroup', this.wsData);\r\n  \tconst members = await this.model('relationship').where({group_id:group_id}).select()\r\n  \tawait members.map((n) => {\r\n  \t  if(socketObject[n.user_email])\r\n  \t  \tsocketObject[n.user_email].leave(group_id)\r\n  \t})\r\n  \tawait this.model('relationship').where({group_id:group_id}).delete()\r\n  \tawait this.model('group').where({group_id:group_id}).delete()\r\n  }\r\n\r\n  async leaveGroupAction() {\r\n  \tconst group_id = this.wsData.group.id\r\n  \tthis.websocket.leave(group_id)\r\n  }\r\n};\r\n"
    ]
}