{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\config\\adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "Console",
        "File",
        "DateFile",
        "path",
        "database",
        "socketio",
        "fileSession",
        "isDev",
        "think",
        "env",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "mysql",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern",
        "websocket",
        "allowHeaters",
        "allowCredentials",
        "allowMethods",
        "allowOrigin",
        "adapter",
        "messages",
        "login",
        "close",
        "addVerify",
        "addFriend",
        "addGroup",
        "inviteToGroup",
        "acceptInviteAddToGroupLeader",
        "acceptInviteAddToGroup",
        "createGroupJoin",
        "removeGroup",
        "leaveGroup",
        "chat",
        "session",
        "cookie",
        "name",
        "keys",
        "signed",
        "sessionPath"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\common\\config\\adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\nconst {Console, File, DateFile} = require('think-logger3');\nconst path = require('path');\nconst database = require('./database.js');\nconst socketio = require('think-websocket-socket.io');\n// const redisCache = require('think-cache-redis');\nconst fileSession = require('think-session-file');\nconst isDev = think.env === 'development';\n\n/**\n * cache adapter config\n * @type {Object}\n */\nexports.cache = {\n  type: 'file',\n  common: {\n    timeout: 24 * 60 * 60 * 1000 // millisecond\n  },\n  file: {\n    handle: fileCache,\n    cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\n    pathDepth: 1,\n    gcInterval: 24 * 60 * 60 * 1000 // gc interval\n  }\n};\n// exports.cache = {\n//   type: 'redis',\n//   common: {\n//     timeout: 24 * 3600 * 1000 // millisecond\n//   },\n//   redis: {\n//     handle: redisCache,\n//     port: 8360,\n//     host: '127.0.0.1',\n//     password: ''\n//   }\n// }\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n  type: 'mysql',\n  common: {\n    logConnect: isDev,\n    logSql: isDev,\n    logger: msg => think.logger.info(msg)\n  },\n  mysql: database\n};\n\n/**\n * logger adapter config\n * @type {Object}\n */\nexports.logger = {\n  type: isDev ? 'console' : 'dateFile',\n  console: {\n    handle: Console\n  },\n  file: {\n    handle: File,\n    backups: 10, // max chunk number\n    absolute: true,\n    maxLogSize: 50 * 1024, // 50M\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  },\n  dateFile: {\n    handle: DateFile,\n    level: 'ALL',\n    absolute: true,\n    pattern: '-yyyy-MM-dd',\n    alwaysIncludePattern: true,\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  }\n};\n\nexports.websocket = {\n  type: 'socketio',\n  common: {\n    // common config\n  },\n  socketio: {\n    handle: socketio,\n    allowHeaters: ['content-type'],\n    allowCredentials: true,\n    allowMethods: ['GET','HEAD','PUT','POST','DELETE','PATCH','OPTIONS'],\n    allowOrigin: 'localhost:9080',  // 默认所有的域名都允许访问\n    path: '/socket.io',             // 默认 '/socket.io'\n    adapter: null,                  // 默认无 adapter\n    messages: [{\n      login: '/api/websocket/login',       // 建立连接时处理对应到 websocket Controller 下的 open Action\n      // storeSocket: '/api/websocket/storeSocket', // 得知连接的用户的email\n      close: '/api/websocket/close',     // 关闭连接时处理的 Action\n      addVerify: '/api/websocket/addVerify', // 发送好友验证\n      addFriend: '/api/websocket/addFriend', // 同意添加好友\n      addGroup: '/api/websocket/addGroup', // 同意对方加入群\n      inviteToGroup: '/api/websocket/inviteToGroup', // 邀请好友进入群\n      acceptInviteAddToGroupLeader: '/api/websocket/acceptInviteAddToGroupLeader', // 群主接受邀请加入群\n      acceptInviteAddToGroup: '/api/websocket/acceptInviteAddToGroup', // 被邀请人接受邀请加入群\n      createGroupJoin: '/api/websocket/createGroupJoin', // 创建群后加入聊天室\n      removeGroup: '/api/websocket/removeGroup', // 解散群\n      leaveGroup: '/api/websocket/leaveGroup', // 离开群\n      chat: '/api/websocket/chat', // 聊天\n    }]\n  }\n};\n\nexports.session = {\n  type: 'file',\n  common: {\n    cookie: {\n      name: 'thinkjs',\n      keys: ['signature key'],\n      signed: true\n    }\n  },\n  file: {\n    handle: fileSession,\n    sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n  }\n}\n"
    ]
}